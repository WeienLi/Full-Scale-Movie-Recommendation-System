version: "3.9"

services:
  flask_api:
    build: .
    container_name: flask_api
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOST: 172.16.238.14
      REDIS_PORT: 6379
    ports:
      - 8082:8082
    networks:
      team3-network:
        ipv4_address: 172.16.238.10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./Monitoring/alerts.yml:/etc/prometheus/alerts.yml
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      team3-network:
        ipv4_address: 172.16.238.11

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./Monitoring/datasource.yml:/etc/grafana/provisioning/datasources/default.yml
      - ./Monitoring/dashboard.yml:/etc/grafana/provisioning/dashboards/default.yml
      - ./Monitoring/dashboards:/var/lib/grafana/dashboards
    environment:
      GF_SECURITY_ADMIN_PASSWORD: pass@123
      GF_INSTALL_PLUGINS: redis-app
    networks:
      team3-network:
        ipv4_address: 172.16.238.12

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "9093:9093"
    volumes:
      - "./Monitoring/alertmanager.yml:/config/alertmanager.yml"
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      team3-network:
        ipv4_address: 172.16.238.13

  redis:
    image: redislabs/redistimeseries:edge
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      team3-network:
        ipv4_address: 172.16.238.14
    volumes:
      - redis-data:/data

  kafka-consumer:
    build:
      context: .
      dockerfile: ./kafka-consumer/Dockerfile
    container_name: kafka-consumer
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOST: 172.16.238.14
      REDIS_PORT: 6379
    ports:
      - 8000:8000
    networks:
      team3-network:
        ipv4_address: 172.16.238.15

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    depends_on:
      - redis
    ports:
      - 9121:9121
    environment:
      REDIS_ADDR: "172.16.238.14:6379"
    links:
      - redis
      - prometheus
    networks:
      team3-network:
        ipv4_address: 172.16.238.16

volumes:
  redis-data:
    driver: local

networks:
  team3-network:
    name: team3-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
