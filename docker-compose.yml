version: "3.9"

services:
  flask_api: &api_template
    build: .
    image: flask_api:${GITHUB_SHA}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GITHUB_SHA: ${GITHUB_SHA}
      APP_MODE: main
    healthcheck:
      test: wget --spider --tries=1 --no-verbose http://localhost:8082/ || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 30s
      timeout: 1s
      retries: 1
    restart: unless-stopped
    ports:
      - 8082
    networks:
      - team3-network

  flask_api_canary:
    <<: *api_template # Copy the contents of the flask_api service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GITHUB_SHA: ${GITHUB_SHA}
      APP_MODE: canary
    profiles:
      - canary
  
  fallback-service:
    image: nginx:alpine
    container_name: fallback-service
    restart: unless-stopped
    volumes:
      - ./Traefik/fallback-recommendation.html:/usr/share/nginx/html/index.html
      - ./Traefik/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8082
    networks:
      - team3-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./Monitoring/alerts.yml:/etc/prometheus/alerts.yml
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      - team3-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./Monitoring/datasource.yml:/etc/grafana/provisioning/datasources/default.yml
      - ./Monitoring/dashboard.yml:/etc/grafana/provisioning/dashboards/default.yml
      - ./Monitoring/dashboards:/var/lib/grafana/dashboards
    environment:
      GF_SECURITY_ADMIN_PASSWORD: pass@123
      GF_INSTALL_PLUGINS: redis-app
    networks:
      - team3-network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "9093:9093"
    volumes:
      - "./Monitoring/alertmanager.yml:/config/alertmanager.yml"
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - team3-network

  redis:
    # image: redisfab/redistimeseries:1.6.9-arm64v8-focal # for arm64 (Apple M1)
    image: redislabs/redistimeseries:edge
    container_name: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 1s
      timeout: 3s
      retries: 10
    ports:
      - 6379:6379
    networks:
      - team3-network
    volumes:
      - redis-data:/data

  kafka-consumer:
    build:
      context: .
      dockerfile: ./kafka-consumer/Dockerfile
    container_name: kafka-consumer
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 8000:8000
    networks:
      - team3-network

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - 9121:9121
    environment:
      REDIS_ADDR: "redis:6379"
    links:
      - redis
      - prometheus
    networks:
      - team3-network

  traefik:
    image: traefik:v2.9
    command:
      --api.insecure=true
      --entryPoints.api_entry.address=:8082
      --providers.file.directory=/etc/traefik/
      --metrics.prometheus=true 
    container_name: traefik
    ports:
      - "8080:8080"
      - "8082:8082"
    volumes:
      - ./Traefik/service-config.yml:/etc/traefik/dynamic.yml
    networks:
      - team3-network

volumes:
  redis-data:
    driver: local

networks:
  team3-network:
    name: team3-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
