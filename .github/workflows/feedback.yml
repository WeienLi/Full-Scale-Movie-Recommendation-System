name: Model feedback loop

on:
  workflow_dispatch:
  schedule:
    - cron: "0 14 26/3 11 *"

env:
  WANDB_TEAM: team-3-comp585
  WANDB_PROJECT: milestone3
  HOST_NAME: fall2022-comp585-3.cs.mcgill.ca
  USER_NAME: team-3
  FOLDER_NAME: Team-3
  SHA_File: sha.txt
  APP_SHA: ${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

jobs:
  continous-training:
    runs-on: cirun-gpu-runner
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        with:
          branch: new-model-releasement

      - name: Check python availability
        id: check-py
        run: python --version

      - name: Set up Python 3.8
        if: always() && (steps.check-py.outcome == 'failure')
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: "pip"

      - name: Ensure pip exists
        id: ensure-pip
        run: |
          yes | sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install python-pip
          yes | sudo DEBIAN_FRONTEND=noninteractive apt-get -yqq install python3-pip

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest pytest-cov
          if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then python3 -m pip install -r dev-requirements.txt; fi

      - name: Train model
        run: python3 -m kafka_consumer.feedback_pipeline
        env:
          GITHUB_SHA: ${{ env.APP_SHA }}
          WANDB_API_KEY: ${{ env.WANDB_API_KEY }}

      - name: Create file containing latest sha
        uses: DamianReeves/write-file-action@master
        with:
          path: ${{ env.SHA_File }}
          contents: |
            ${{ env.APP_SHA }}
          write-mode: overwrite

      - name: Commit & Push
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: new-model-releasement
          force: true
          message: "Writing new Sha checkout wandb for new model information - ${ date }"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          branch: new-model-releasement

      - name: Get Runs Using SHA
        uses: machine-learning-apps/wandb-action@master
        with:
          PROJECT_NAME: ${{ format('{0}/{1}', env.WANDB_TEAM, env.WANDB_PROJECT) }}
          FILTER_GITHUB_SHA: ${{ env.APP_SHA }}
          BASELINE_TAGS: "['baseline', 'reference']"
          DISPLAY_METRICS: "[
            'factorized_top_k/top_20_categorical_accuracy',
            'factorized_top_k/top_500_categorical_accuracy',
            'factorized_top_k/top_5_categorical_accuracy',
            'loss', 'total_loss', 'regularization_loss', '_runtime'
            ]"
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          DEBUG: "true"

      - name: Read output CSV
        id: csv
        uses: juliangruber/read-file-action@v1
        with:
          path: ./wandb_report.csv

      - name: Create MD
        uses: petems/csv-to-md-table-action@master
        id: csv-table-output
        with:
          csvinput: ${{ steps.csv.outputs.content }}

      - name: Post comment with evaluation results
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
          body: |
            #### Model verified âœ…
            SHA: `${{ env.APP_SHA }}`
            ${{ steps.csv-table-output.outputs.markdown-table }}
