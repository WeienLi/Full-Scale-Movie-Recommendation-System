name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      MAX_LINE_LENGHT: "200"
    steps:
      - uses: actions/checkout@v1
      - uses: ricardochaves/python-lint@master
        with:
          use-mypy: false
          extra-pycodestyle-options: "--max-line-length=${{ env.MAX_LINE_LENGHT }}"
          extra-flake8-options: "--max-line-length=${{ env.MAX_LINE_LENGHT }}"

      - name: Create comment
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Lint tests failed ❌
            To fix this, run the following from the root directory  
            ```
            ./lint.sh
            ```

  unit:
    runs-on: ubuntu-latest
    env:
      MIN_PERCENT_COVERAGE: 70
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Run tests and build coverage file
        run: |
          failed=0
          pytest --cov-fail-under=${{ env.MIN_PERCENT_COVERAGE }} --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=. ./ > pytest-coverage.txt || failed=1
          cat pytest-coverage.txt
          if [ $failed -ne 0 ]; then
              exit 1
          fi

      - name: Pytest coverage comment
        if: ${{ always() }}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: ./docker.sh start
